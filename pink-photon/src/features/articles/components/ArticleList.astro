---
import { slugify } from "@/utils/slugify";
import type { Article } from "../domain/Article";
import ArticleCard from "./ArticleCard.astro";
import { timeFormat } from "@/lib/timeFormat";
import Image from "@/components/ui/Image.astro";

interface TopCategoryArticles {
	slug: string;
	name: string;
	articles: Article[];
}
interface Props {
	articles: Article[];
	topCategoryArticles?: TopCategoryArticles[];
	newArticles?: Article[];
}

const { articles, topCategoryArticles, newArticles } = Astro.props as Props;
const top1 = articles[0];
const top2_3 = articles.slice(1, 3);
const top4_5 = articles.slice(3, 5);
const rest = articles.slice(5);
---
<div class="mt-2">
  <div class="flex">
  <div class="w-full flex-1 lg:pr-4">
  <div class="flex gap-4 md:flex-row flex-col">
    {top1 && (
      <div class="flex-2 flex flex-col">
        <ArticleCard {...top1}  />
          <div class="grid grid-cols-2 gap-4">
{top4_5.map((article) => (
        <ArticleCard {...article} horizontal={false}  />
      ))} 
          </div>
      </div>
    )}

      <div class="flex-1 flex md:flex-col flex-row gap-2">
      {top2_3.map((article) => (
        <ArticleCard {...article}  />
      ))}
      </div> 
  </div>

 
{topCategoryArticles && topCategoryArticles.length > 0 && (
    <>
      <hr class="my-4 border-gray-300" />
      {topCategoryArticles.map((category) => (
        <div class="mt-4">
    <a href={`/${category.slug}`} class="no-underline text-black hover:text-blue-600">
    <h2 class="text-lg font-bold mb-2 flex items-center gap-2">
  <span class="w-2 h-6 bg-blue-500"></span>
  {category.name}
</h2>

          </a>
          <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            {category.articles.map((article) => (
              <ArticleCard {...article} />
            ))}
          </div>
        </div>
      ))}
    </>
  )}

   {rest.length > 0 && (
  <hr class="my-4 border-gray-300" />
    <div class="flex flex-col grid-cols-4 gap-4 mt-4">
      {rest.map((article) => (
    <ArticleCard {...article} horizontal={true} />
      ))}
    </div>
  )}
  </div>



  <div class="pl-4 py-2 border-l border-gray-300 w-80 lg:block hidden">
    <h2 class="text-lg font-bold mb-2 flex items-center gap-2">
  <span class="w-2 h-6 bg-red-500"></span>
    Mới cập nhập gần đây
</h2>

{newArticles && newArticles.length > 0 ? (
    
    
<ol class="relative border-s border-gray-200 dark:border-gray-700">                  
{
newArticles.map((article) => (
<a href={`/${article.categories.map(slugify).join("/")}/${slugify(article.title)}-${article.id}`} class="no-underline text-black hover:text-blue-600">
  <li class="mb-6 ms-4">
<div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
<time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">{timeFormat(article.publishedAt!)}</time>
            <div class="flex items-start justify-between">
              <div>
  <h3 class="text-lg font-semibold text-gray-900 dark:text-white">{article.title}</h3>
            <p class="text-xs font-normal text-gray-500 dark:text-gray-400 pt-1" >{article.author}</p>
              </div>
              <Image src={article.thumbnailUrl} alt={article.title} className="w-20 h-20 object-cover rounded-lg ms-2" />
            </div>
</li>
</a>
))
}
  
</ol>


    ) : (
      <p>Không có bài viết mới nào.</p>
    )}
    </div>
  </div>
</div>


